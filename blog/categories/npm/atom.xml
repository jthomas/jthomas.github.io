<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: npm | James Thomas]]></title>
  <link href="http://jamesthom.as/blog/categories/npm/atom.xml" rel="self"/>
  <link href="http://jamesthom.as/"/>
  <updated>2016-11-01T16:06:18+00:00</updated>
  <id>http://jamesthom.as/</id>
  <author>
    <name><![CDATA[James Thomas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NPM Modules in Node-RED]]></title>
    <link href="http://jamesthom.as/blog/2016/01/04/npm-modules-in-node-red/"/>
    <updated>2016-01-04T15:40:00+00:00</updated>
    <id>http://jamesthom.as/blog/2016/01/04/npm-modules-in-node-red</id>
    <content type="html"><![CDATA[<p>Before Christmas, <a href="https://www-304.ibm.com/connections/blogs/et/entry/home?lang=en_us">my department</a>
at IBM had one of our semi-regular Hack Days to
get everyone together and work on interesting ideas away from the day job. I spent
the time playing with an idea to make exposing NPM packages in <a href="http://nodered.org">Node-RED</a> easier...</p>

<p><blockquote><p>Node-RED is a visual tool for wiring the Internet of Things.</p></blockquote></p>

<p>It makes it easy to create, combine and control data flowing between hardware
devices, web APIs and open protocols. The tool exposes operations through a
series of <em>nodes</em>, which can be created through the browser-based editor and
connected to other nodes to create <em>message flows</em>.</p>

<p>The tool comes built-in with a <a href="http://flows.nodered.org/">huge selection of nodes</a>, from connecting to a
Raspberry Pi to handling HTTP requests, for creating flows. Users <a href="http://nodered.org/docs/creating-nodes/">create their own nodes</a>
to expose new functionality, by creating small modules using JavaScript and HTML.
People often wrap existing <a href="https://www.npmjs.com/">NPM modules</a> into custom Node-RED nodes to use that module functionality in flows.</p>

<p><a href="https://www.npmjs.com/">NPM</a> has over two hundred thousand modules, many of which provide simple
"stateless" functions that return a result based upon the input data. These
modules are ideally suited for using within Node-RED message flows.</p>

<p>Exposing multiple new NPM modules required creating custom Node-RED nodes for every
module you wanted to use. Whilst the Node-RED node boilerplate is small,
it becomes a bit laborious and repetitive to keep doing this for extremely simple modules.</p>

<p>Wondering how to make this easier, I started hacking on ideas.</p>

<h2><em>Two days later...</em></h2>

<p><blockquote><p>Node-RED node to dynamically expose NPM modules as nodes.</p><footer><strong>node-red-contrib-npm</strong> <cite><a href='http://flows.nodered.org/node/node-red-contrib-npm'>flows.nodered.org/node/&hellip;</a></cite></footer></blockquote></p>

<p><img src="/images/npm-start.png"></p>

<p>This new node allows you to dynamically expose NPM modules as Node-RED nodes
without needing to manually create new nodes for them.</p>

<p>Using the node editor panel, the user can set the name of the NPM package to
expose along with the module invocation style.</p>

<p><img src="/images/npm-configure.png"></p>

<p>Incoming flow messages are
passed as an argument to the function being executed. Users can set up the node
to call the module, a module function or even run custom setup code in response
to incoming messages.</p>

<p>Execution results, either returned directly or asynchronously
(Promises and callback-style supported), are sent as the outgoing message
payload.</p>

<p>When the flow is deployed, the NPM module will be automatically installed and instantiated.</p>

<p>Now we don't have to write lots of extra boilerplate code every time we
want to use a tiny NPM module in a Node-RED flow, hurrah!</p>

<p><em>Here's a short demonstration using the node to expose the <a href="https://www.npmjs.com/package/sentiment">sentiment</a> package
in a flow:</em></p>

<p><img src="/images/Node-RED-NPM.gif"></p>
]]></content>
  </entry>
  
</feed>

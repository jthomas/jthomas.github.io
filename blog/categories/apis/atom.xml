<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: apis | James Thomas]]></title>
  <link href="http://jamesthom.as/blog/categories/apis/atom.xml" rel="self"/>
  <link href="http://jamesthom.as/"/>
  <updated>2019-01-18T15:22:17+00:00</updated>
  <id>http://jamesthom.as/</id>
  <author>
    <name><![CDATA[James Thomas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Custom Domains With IBM Cloud Functions]]></title>
    <link href="http://jamesthom.as/blog/2018/12/03/custom-domains-with-ibm-cloud-functions/"/>
    <updated>2018-12-03T15:11:00+00:00</updated>
    <id>http://jamesthom.as/blog/2018/12/03/custom-domains-with-ibm-cloud-functions</id>
    <content type="html"><![CDATA[<p>In this tutorial, I'm going to show you how to use a <a href="https://console.bluemix.net/docs//api-management/manage_apis.html#custom_domains">custom domain for serverless functions</a> exposed as APIs on <a href="https://cloud.ibm.com/">IBM Cloud</a>. APIs endpoints use a random sub-domain on IBM Cloud by default. Importing your own domains means endpoints can be accessible through custom URLs.</p>

<p><em>Registering a custom domain with IBM Cloud needs you to complete the following steps...</em></p>

<ul>
<li>Generate SSL/TLS certificates for your domain</li>
<li>Register domain certificates with <a href="https://console.bluemix.net/catalog/services/certificate-manager">IBM Certificate Manager</a></li>
<li>Bind a custom domain to <a href="https://cloud.ibm.com/openwhisk/apimanagement">Cloud Functions APIs</a> using the <a href="https://cloud.ibm.com/apis/">IBM Cloud APIs</a> console.</li>
</ul>


<p><strong>This tutorial assumes you already have actions on <a href="https://console.bluemix.net/openwhisk/">IBM Cloud Functions</a> exposed as HTTP APIs using the built-in <a href="https://console.bluemix.net/openwhisk/apimanagement">API service</a>.</strong> If you haven't done that yet, please see the documentation <a href="https://console.bluemix.net/docs/openwhisk/">here</a> before you proceed.</p>

<p>The instructions below set up a sub-domain (<code>api.&lt;YOUR_DOMAIN&gt;</code>) to access serverless functions.</p>

<h2>Generating SSL/TLS Certificates with Let's Encrypt</h2>

<p>IBM Cloud APIs only supports HTTPS traffic with custom domains. Users needs to upload valid SSL/TLS certificates for those domains to IBM Cloud before being able to use them.</p>

<p><a href="https://letsencrypt.org/">Let's Encrypt</a> is a Certificate Authority which provides free SSL/TLS certificates for domains. Let's Encrypt is trusted by all root identify providers. This means certificates generated by this provider will be trusted by all major operating systems, web browsers, and devices.</p>

<p>Using this service, valid certificates can be generated to support custom domains on IBM Cloud.</p>

<h3>domain validation</h3>

<p>Let's Encrypt needs to verify you <a href="https://letsencrypt.org/how-it-works/">control the domain</a> before generating certificates.</p>

<p>During the verification process, the user makes an authentication token available through the domain. The service supports <a href="https://certbot.eff.org/docs/challenges.html">numerous methods</a> for exposing the authentication token, including HTTP endpoints, DNS TXT records or TLS SNI.</p>

<p>There is an application (<a href="https://certbot.eff.org/">certbot</a>) which automates generating authentication tokens and certificates.</p>

<p>I'm going to use the <a href="https://en.wikipedia.org/wiki/TXT_record">DNS TXT record</a> as the challenge mechanism. Using this approach, certbot will provide a random authentication token I need to create as the TXT record value under the <code>_acme-challenge.&lt;YOUR_DOMAIN&gt;</code> sub-domain before validation.</p>

<h3>using certbot with dns txt validation</h3>

<ul>
<li>Install <a href="https://certbot.eff.org/">certbot</a> into your <a href="https://certbot.eff.org/docs/install.html">environment</a>, e.g. using <a href="https://brew.sh/">Homebrew</a>.</li>
</ul>


<p><code>
brew install certbot
</code></p>

<ul>
<li>Run certbot in <a href="https://certbot.eff.org/docs/using.html#manual">manual mode</a> with the DNS <a href="https://certbot.eff.org/docs/challenges.html">challenge</a> method.</li>
</ul>


<p><code>
certbot certonly --manual --preferred-challenges=dns -d *.&lt;YOUR_DOMAIN&gt;
</code></p>

<p>I'm generating a wildcard certificate for any sub-domains under <code>&lt;YOUR_DOMAIN&gt;</code>. This allows me to use the same certificate with different sub-domains on IBM Cloud, rather than generating a certificate per sub-domain.</p>

<p>During the validation process, <code>certbot</code> should display the following message with the challenge token.</p>

<p>```
Please deploy a DNS TXT record under the name
_acme-challenge.<YOUR_DOMAIN> with the following value:</p>

<p><CHALLENGE_TOKEN></p>

<p>Before continuing, verify the record is deployed.</p>

<hr />

<p>Press Enter to Continue
```</p>

<h3>setting challenge token</h3>

<ul>
<li><p>Take the challenge token from <code>certbot</code> and create a new TXT record with this value for the <code>_acme-challenge.&lt;YOUR_DOMAIN&gt;</code> sub-domain.</p></li>
<li><p>Use the <code>dig</code> command to verify the TXT record is available.</p></li>
</ul>


<p><code>
dig -t txt _acme-challenge.&lt;YOUR_DOMAIN&gt;
</code></p>

<p>The challenge token should be available in the DNS response shown by <code>dig</code>. üëç</p>

<p><code>
;; ANSWER SECTION:
_acme-challenge.&lt;YOUR_DOMAIN&gt;. 3599 IN  TXT "&lt;CHALLENGE_TOKEN&gt;"
</code></p>

<ul>
<li>Press <kbd>Enter</kbd> in the terminal session running <code>certbot</code> when the challenge token is available.</li>
</ul>


<h3>retrieving domain certificates</h3>

<p><code>certbot</code> will now retrieve the TXT record for the sub-domain and verify it matches the challenge token. If the domain has been validated, <code>certbot</code> will show the directory containing the newly created certificates.</p>

<p><code>
IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/&lt;YOUR_DOMAIN&gt;/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/&lt;YOUR_DOMAIN&gt;/privkey.pem
   Your cert will expire on 2019-03-03.
...
</code></p>

<p><code>certbot</code>  creates the following files.</p>

<ul>
<li><code>cert.pem</code> - public domain certificate</li>
<li><code>privkey.pem</code> - private key for domain certificate</li>
<li><code>chain.pem</code> - intermediate domain certificates</li>
<li><code>fullchain.pem</code> - public and intermediate domain certificates in a single file.</li>
</ul>


<p><em>Registering the domain with IBM Cloud will require the public, private and intermediate certificate files.</em></p>

<h2>Registering Custom Domain with IBM Cloud</h2>

<p>Certificates for custom domains in IBM Cloud are managed by the <a href="https://console.bluemix.net/catalog/services/certificate-manager">Certificate Manager</a> service.</p>

<ul>
<li>Create a <a href="https://cloud.ibm.com/catalog/services/certificate-manager">new instance</a> of the service from the <a href="https://cloud.ibm.com/catalog/">IBM Cloud Catalog</a>.</li>
<li>From the service homepage, click the "<em>Import Certificate</em>" button.</li>
<li>Fill in the following fields in the import form. Use the generated certificate files in the upload fields.

<ul>
<li>Name</li>
<li>Certificate File (<code>cert.pem</code>)</li>
<li>Private key file (<code>privkey.pem</code>)</li>
<li>Intermediate certificate file (<code>chain.pem</code>)</li>
</ul>
</li>
</ul>


<p>After importing the certificate, check the certificate properties match the expected values</p>

<p>{% img /images/custom-domains/import-certs.gif %}</p>

<h2>Binding Domain to IBM Cloud Functions APIs</h2>

<p><a href="https://console.bluemix.net/docs/api-management/manage_apis.html#custom_domains_bind">Custom domains</a> for APIs on IBM Cloud are managed through the IBM Cloud APIs <a href="https://console.bluemix.net/apis/">console</a>.</p>

<ul>
<li>Open the "<a href="https://console.bluemix.net/apis/domains">Custom Domains</a>" section on the <a href="https://console.bluemix.net/apis/">IBM Cloud APIs</a> console.</li>
<li>Check the "Region" selector matches the region chosen for your actions and APIs.</li>
<li>Click the <code>¬∑¬∑¬∑</code> icon on the row where "Organisation" and "Space" values match your APIs.</li>
<li>Click "<em>Change Settings</em>" from the pop-up menu.</li>
</ul>


<p>{% img /images/custom-domains/open-apis-settings.gif %}</p>

<h3>domain validation</h3>

<p>IBM Cloud now <a href="https://console.bluemix.net/docs//api-management/manage_apis.html#custom_domains">needs to verify</a> you control the custom domain being used.</p>

<p><em>Another DNS TXT record needs to be created <strong>before</strong> attempting to bind the domain.</em></p>

<ul>
<li>From the "<em>Custom Domain Settings</em>" menu, make a note of the "<em>Default domain / alias</em>" value. This should be in the format: <code>&lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud</code>.</li>
<li>Create a new TXT record for the custom sub-domain (<code>api.&lt;YOUR_DOMAIN&gt;</code>) with the default domain alias as the record value (<code>&lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud</code>).</li>
<li>Use the <code>dig</code> command to check the sub-domain TXT record exists and contains the correct value.</li>
</ul>


<p><code>
dig -t txt api.&lt;YOUR_DOMAIN&gt;
</code></p>

<p>The default domain alias value should be available in the DNS response shown by <code>dig</code>. üëç</p>

<p><code>
;; ANSWER SECTION:
api.&lt;YOUR_DOMAIN&gt;. 3599 IN  TXT "&lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud"
</code></p>

<p>Having created the TXT record, fill in the <em>Custom Domain Settings</em> form.</p>

<h3>custom domain settings</h3>

<ul>
<li>Select the "<em>Assign custom domain</em>" checkbox in the "<em>Custom domain settings</em>" form.</li>
<li>Fill in the following form fields.

<ul>
<li><em>Domain Name:</em> use the custom sub-domain to bind  (<code>api.&lt;YOUR-DOMAIN&gt;</code>).</li>
<li><em>Certificate Manager service</em>: select the certificate manger instance.</li>
<li><em>Certificate:</em> select the domain certificate from the drop-down menu.</li>
</ul>
</li>
<li>Click the "<em>Save</em>" button.</li>
</ul>


<p>Once the domain has been validated, the form will redirect to the custom domains overview. The "Custom Domain" field will now show the sub-domain bound to the correct default domain alias.</p>

<p>{% img /images/custom-domains/bind-custom-domain.gif %}</p>

<h3>add CNAME record</h3>

<ul>
<li>Remove the existing TXT record for the custom sub-domain  (<code>api.&lt;YOUR-DOMAIN&gt;</code>).</li>
<li>Add a new CNAME record mapping the custom sub-domain (<code>api.&lt;YOUR-DOMAIN&gt;</code>) to the "<em>Default domain  / alias</em>" on IBM Cloud (<code>&lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud</code>).</li>
<li>Use the <code>dig</code> command to check the CNAME record is correct.</li>
</ul>


<p><code>
dig -t CNAME api.&lt;YOUR_DOMAIN&gt;
</code></p>

<p>The default domain alias value should be available in the DNS response shown by <code>dig</code>. üëç</p>

<p><code>
;; ANSWER SECTION:
api.&lt;YOUR_DOMAIN&gt;.  3599    IN  CNAME   &lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud.
</code></p>

<h2>Testing It Out</h2>

<p>Functions should now be accessible through both the default domain alias and the new custom domain. üëè</p>

<ul>
<li>Invoke the default domain alias API URL for the function.</li>
</ul>


<p><code>
curl https://&lt;APP_ID&gt;.&lt;REGION&gt;.apiconnect.appdomain.cloud/&lt;BASE_PATH&gt;/&lt;SUB_PATH&gt;
</code></p>

<p><em>Both the <code>BASE_PATH</code> and <code>SUB_PATH</code> values come from the API definitions configured by the user.</em></p>

<ul>
<li>Invoke the custom domain API URL for the function.</li>
</ul>


<p><code>
curl https://api.&lt;YOUR_DOMAIN&gt;/&lt;BASE_PATH&gt;/&lt;SUB_PATH&gt;
</code></p>

<p><em>Make sure you use HTTPS protocol in the URL. IBM Cloud does not support HTTP traffic with custom domains.</em></p>

<p>Both responses for these URLs should the same! Hurrah. üòé</p>
]]></content>
  </entry>
  
</feed>

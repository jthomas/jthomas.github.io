<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ibmcloud on notes on software.</title>
    <link>https://jamesthom.as/tags/ibmcloud/</link>
    <description>Recent content in ibmcloud on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/ibmcloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hosting Static Websites on IBM Cloud</title>
      <link>https://jamesthom.as/2019/07/hosting-static-websites-on-ibm-cloud/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/07/hosting-static-websites-on-ibm-cloud/</guid>
      <description>This blog post explains how to host a static website on IBM Cloud. These websites are rendered client-side by the browser from static assets, like HTML, CSS and JS files. They do not need a server-side component to create pages dynamically at runtime. Static websites are often combined with backend APIs to create Single Page Applications.
Hosting static websites on IBM Cloud uses Cloud Object Storage (COS) and Cloud Internet Services (CIS) (with Page Rules and Edge Functions).</description>
    </item>
    
    <item>
      <title>Provisioning IBM Cloud Services With Terraform</title>
      <link>https://jamesthom.as/2019/01/provisioning-ibm-cloud-services-with-terraform/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/01/provisioning-ibm-cloud-services-with-terraform/</guid>
      <description>This blog post will teach you how to provision applications services on IBM Cloud with Terraform.
Terraform is an open-source &amp;ldquo;infrastructure-as-code&amp;rdquo; tool. It allows cloud resources to be defined using a declarative configuration file. The Terraform CLI then uses this file to automatically provision and maintain cloud infrastructure needed by your application. This allows the creation of reproducible environments in the cloud across your application life cycle.
IBM Cloud created an official provider plugin for Terraform.</description>
    </item>
    
    <item>
      <title>Loosely-coupled Serverless Functions With Apache Openwhisk</title>
      <link>https://jamesthom.as/2019/01/loosely-coupled-serverless-functions-with-apache-openwhisk/</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/01/loosely-coupled-serverless-functions-with-apache-openwhisk/</guid>
      <description>Just like software engineering, best practices for serverless applications advise keeping functions small and focused on a single task, aka &amp;ldquo;do one thing and do it well&amp;rdquo;. Small single-purpose functions are easier to develop, test and debug. üëç
But what happens when you need execute multiple asynchronous tasks (implemented as separate functions) from an incoming event, like an API request? ü§î
Functions Calling Functions? Functions can invoke other functions directly, using asynchronous calls through the client SDK.</description>
    </item>
    
    <item>
      <title>Highly Available Serverless Apps With Cloudant&#39;s Cross-Region Replication</title>
      <link>https://jamesthom.as/2019/01/highly-available-serverless-apps-with-cloudants-cross-region-replication/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/01/highly-available-serverless-apps-with-cloudants-cross-region-replication/</guid>
      <description>Building highly available serverless applications relies on eliminating &amp;ldquo;single points of failure&amp;rdquo; from application architectures.
Existing tutorials showed how to deploy the same serverless application on IBM Cloud in different regions. Using the Global Load Balancer from IBM Cloud Internet Services, traffic is distributed across multiple applications from the same hostname. The Global Load Balancer automatically detects outages in the regional applications and redirects traffics as necessary.
But what if all instances rely on the same database service and that has issues?</description>
    </item>
    
    <item>
      <title>Using Custom Domains With IBM Cloud Functions</title>
      <link>https://jamesthom.as/2018/12/using-custom-domains-with-ibm-cloud-functions/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2018/12/using-custom-domains-with-ibm-cloud-functions/</guid>
      <description>In this tutorial, I&amp;rsquo;m going to show you how to use a custom domain for serverless functions exposed as APIs on IBM Cloud. APIs endpoints use a random sub-domain on IBM Cloud by default. Importing your own domains means endpoints can be accessible through custom URLs.
Registering a custom domain with IBM Cloud needs you to complete the following steps&amp;hellip;
 Generate SSL/TLS certificates for your domain Register domain certificates with IBM Certificate Manager Bind a custom domain to Cloud Functions APIs using the IBM Cloud APIs console.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webassembly on notes on software.</title>
    <link>https://jamesthom.as/tags/webassembly/</link>
    <description>Recent content in webassembly on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/webassembly/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless Functions with WebAssembly Modules</title>
      <link>https://jamesthom.as/2019/08/serverless-functions-with-webassembly-modules/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/08/serverless-functions-with-webassembly-modules/</guid>
      <description>Watching a recent talk by Lin Clark and Till Schneidereit about WebAssembly (Wasm) inspired me to start experimenting with using WebAssembly modules from serverless functions.
This blog post demonstrates how to invoke functions written in C from Node.js serverless functions. Source code in C is compiled to Wasm modules and bundled in the deployment package. Node.js code implements the serverless platform handler and calls native functions upon invocations.
The examples should work (with some modifications) on any serverless platform that supports deploying Node.</description>
    </item>
    
  </channel>
</rss>
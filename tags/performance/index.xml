<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>performance on notes on software.</title>
    <link>https://jamesthom.as/tags/performance/</link>
    <description>Recent content in performance on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Saving Money and Time With Node.js Worker Threads in Serverless Functions</title>
      <link>https://jamesthom.as/2019/05/saving-money-and-time-with-node.js-worker-threads-in-serverless-functions/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2019/05/saving-money-and-time-with-node.js-worker-threads-in-serverless-functions/</guid>
      <description>Node.js v12 was released last month. This new version includes support for Worker Threads, that are enabled by default. Node.js Worker Threads make it simple to execute JavaScript code in parallel using threads. 👏👏👏
This is useful for Node.js applications with CPU-intensive workloads. Using Worker Threads, JavaScript code can be executed code concurrently using multiple CPU cores. This reduces execution time compared to a non-Worker Threads version.
If serverless platforms provide Node.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on notes on software.</title>
    <link>https://jamesthom.as/tags/go/</link>
    <description>Recent content in go on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Openwhisk and Go</title>
      <link>https://jamesthom.as/2017/01/openwhisk-and-go/</link>
      <pubDate>Tue, 17 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2017/01/openwhisk-and-go/</guid>
      <description>In an earlier blog post, I explained how to use Go language binaries on OpenWhisk using Docker-based Actions. It relied on building Docker images for each serverless function and hosting them on Docker Hub.
Recent updates to Docker-based Actions have made this process much simpler. Developers don&amp;rsquo;t need to build and expose public images anymore.
Let&amp;rsquo;s re-visit the example from the previous post and see how to get it running using this new approachâ€¦</description>
    </item>
    
    <item>
      <title>Serverless Go Actions</title>
      <link>https://jamesthom.as/2016/06/serverless-go-actions/</link>
      <pubDate>Tue, 21 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/06/serverless-go-actions/</guid>
      <description>There&amp;rsquo;s now a better way to do this! See here: http://jamesthom.as/blog/2017/01/17/openwhisk-and-go/
OpenWhisk, the open-source serverless platform, provides the ability to invoke custom Docker containers as serverless functions.
Developers can create new Actions, referencing public images on Dockerhub. OpenWhisk manages creating and executing containers using these images per invocation request.
Using this feature, developers can write serverless functions using the Go language. Compiled Go language binaries are embedded within custom Docker images and pushed into the platform.</description>
    </item>
    
  </channel>
</rss>
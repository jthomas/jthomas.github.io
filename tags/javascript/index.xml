<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on notes on software.</title>
    <link>https://jamesthom.as/tags/javascript/</link>
    <description>Recent content in javascript on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 17 May 2021 21:40:21 +0100</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up esbuild for TypeScript libraries</title>
      <link>https://jamesthom.as/2021/05/setting-up-esbuild-for-typescript-libraries/</link>
      <pubDate>Mon, 17 May 2021 21:40:21 +0100</pubDate>
      
      <guid>https://jamesthom.as/2021/05/setting-up-esbuild-for-typescript-libraries/</guid>
      <description>esbuild is a new build tool for JavaScript that claims to be 10-100x faster than similar projects (webpack, rollup, etc). I&amp;rsquo;ve started using it for TypeScript development and have been amazed by the performance. TypeScript compilation is instantaneous compared to the native TypeScript compiler. This a huge benefit for my developer productivity!
As well as being extremely fast, esbuild is simple to setup &amp;amp; use, aims to work out of the box and handles all the common build tasks (bundling, minification, generating source maps, etc) needed for most projects.</description>
    </item>
    
    <item>
      <title>Finding photos on Twitter using face recognition with TensorFlow.js</title>
      <link>https://jamesthom.as/2018/10/finding-photos-on-twitter-using-face-recognition-with-tensorflow.js/</link>
      <pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2018/10/finding-photos-on-twitter-using-face-recognition-with-tensorflow.js/</guid>
      <description>As a developer advocate, I spend a lot of time at developer conferences (talking about serverless üòé). Upon returning from each trip, I need to compile a &amp;ldquo;trip report&amp;rdquo; on the event for my bosses. This helps demonstrate the value in attending events and that I&amp;rsquo;m not just accruing air miles and hotel points for fun&amp;hellip; üõ´üè®
I always include any social media content people post about my talks in the trip report.</description>
    </item>
    
    <item>
      <title>Serverless Machine Learning With TensorFlow.js</title>
      <link>https://jamesthom.as/2018/08/serverless-machine-learning-with-tensorflow.js/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2018/08/serverless-machine-learning-with-tensorflow.js/</guid>
      <description>In a previous blog post, I showed how to use TensorFlow.js on Node.js to run visual recognition on images from the local filesystem. TensorFlow.js is a JavaScript version of the open-source machine learning library from Google.
Once I had this working with a local Node.js script, my next idea was to convert it into a serverless function. Running this function on IBM Cloud Functions (Apache OpenWhisk) would turn the script into my own visual recognition microservice.</description>
    </item>
    
    <item>
      <title>Machine Learning In Node.js With TensorFlow.js</title>
      <link>https://jamesthom.as/2018/08/machine-learning-in-node.js-with-tensorflow.js/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2018/08/machine-learning-in-node.js-with-tensorflow.js/</guid>
      <description>TensorFlow.js is a new version of the popular open-source library which brings deep learning to JavaScript. Developers can now define, train, and run machine learning models using the high-level library API.
Pre-trained models mean developers can now easily perform complex tasks like visual recognition, generating music or detecting human poses with just a few lines of JavaScript.
Having started as a front-end library for web browsers, recent updates added experimental support for Node.</description>
    </item>
    
    <item>
      <title>Playing With OpenWhisk</title>
      <link>https://jamesthom.as/2016/04/playing-with-openwhisk/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/04/playing-with-openwhisk/</guid>
      <description>IBM recently launched OpenWhisk, their new &amp;ldquo;serverless&amp;rdquo; compute platform.
This service allows developers to register small bits of code that are executed on-demand in response to external events. The &amp;ldquo;serverless&amp;rdquo; stack started in 2014, when Amazon launched Lambda, but is now set to be a major technology trend in 2016 with IBM, Microsoft and Google all launching their own solutions.
OpenWhisk is the first open-source &amp;ldquo;serverless&amp;rdquo; platform. It supports running registered actions in Node.</description>
    </item>
    
    <item>
      <title>GeoPix Live Photos</title>
      <link>https://jamesthom.as/2015/07/geopix-live-photos/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/07/geopix-live-photos/</guid>
      <description>Andrew Trice wrote a great sample application for IBM Bluemix called GeoPix.
 GeoPix uses the IBM MobileFirst services to provide a native iOS application which allows users to capture images from their mobile phones, storing them on the local device with automatic syncing to the cloud when online. Using a web application, the user can view their images over a map based upon their location when the photo was taken.</description>
    </item>
    
    <item>
      <title>Server Side Dijit</title>
      <link>https://jamesthom.as/2013/01/server-side-dijit/</link>
      <pubDate>Tue, 15 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2013/01/server-side-dijit/</guid>
      <description>Modern Dojo applications often use declarative programming, annotating HTML elements with custom attributes containing module identifiers, to declare widgets and use client-side rendering with HTML templates to convert web pages into JavaScript applications.
Client-side rendering often comes with a major complaint, the dreaded &amp;ldquo;pop-up effect&amp;rdquo;.
This happens because the HTML initially displayed does not contain widget templates until after client-side rendering has finished. Essentially, the application has to load twice, once to download all the JS, CSS and HTML resources, then again, to render widgets client-side.</description>
    </item>
    
    <item>
      <title>London JS - Watson</title>
      <link>https://jamesthom.as/2012/10/london-js-watson/</link>
      <pubDate>Mon, 22 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/10/london-js-watson/</guid>
      <description>Last month, I was invited to speak at LondonJS on the machine learning and artificial intelligence behind IBM Watson.
I jokingly said the talk would win the prize for the &amp;ldquo;least amount of JavaScript-related content in a LondonJS talk&amp;rdquo;.
The idea was to introduce the audience to topics (machine learning) that might be relevant in the future and IBM Watson was a great example that people love hearing about.
Slides for the event are now posted online, check them out here.</description>
    </item>
    
    <item>
      <title>Olympic Bubbles</title>
      <link>https://jamesthom.as/2012/08/olympic-bubbles/</link>
      <pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/08/olympic-bubbles/</guid>
      <description>Introducing Olympic Bubbles, an experiment visualising mentions of the London 2012 Olympics sports on Twitter in real-time.
With the London 2012 Olympics having multiple events running concurrently, Twitter&amp;rsquo;s become invaluable for catching up on the day&amp;rsquo;s action, deciding what to watch and getting real-time insight into current events.
Having recently started to play with a JavaScript visualisation library (D3), this seemed like a great opportunity to connect the two activities and automate the analysis of Twitter to visualise the most talked about Olympic sports.</description>
    </item>
    
    <item>
      <title>Finding Nano - Getting Dojo under 4KB</title>
      <link>https://jamesthom.as/2012/08/finding-nano-getting-dojo-under-4kb/</link>
      <pubDate>Fri, 03 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/08/finding-nano-getting-dojo-under-4kb/</guid>
      <description>There was a bold claim in the release notes for the 1.7 version of The Dojo Toolkit&amp;hellip;
 Dojo Nano: Less than 4KB gzipped!
 With the move to the AMD module format, the new fully-compliant asynchronous module loader could be reduced to less than four thousands bytes!
Loading unnecessary code was a common complaint against previous versions of The Dojo Toolkit but now we could have complete control over loaded modules using this tiny AMD loader.</description>
    </item>
    
    <item>
      <title>Creating Todo MVC in Dojo - Part 3: Controllers</title>
      <link>https://jamesthom.as/2012/05/creating-todo-mvc-in-dojo-part-3-controllers/</link>
      <pubDate>Sat, 26 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/05/creating-todo-mvc-in-dojo-part-3-controllers/</guid>
      <description>In the final article of this series, we&amp;rsquo;ll be looking at creating an MVC Controller for our sample todo application.
We&amp;rsquo;ve already shown how to define our application model, creating a domain-specific todo model backed by localStorage, along with our view template, using widget templating to render our tasks into the page.
 The controller translates user input into operations on the model. Model View Controller Pattern http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller Wikipedia
 For our application, we need to handle the user actions to allow adding, removing and completing tasks.</description>
    </item>
    
    <item>
      <title>IBM IMPACT 2012 - Session Materials Available</title>
      <link>https://jamesthom.as/2012/05/ibm-impact-2012-session-materials-available/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/05/ibm-impact-2012-session-materials-available/</guid>
      <description>Last week was IBM IMPACT 2012, IBM&amp;rsquo;s premier conference for our customers in Las Vegas. I was fortunate enough to be there for the duration, presentating four sessions on The Dojo Toolkit. The whole event was a fantastic showcase for our company, the capabilities and unique values we provide. Session materials from my talks are now available externally, see below for individual links.
IBM IMPACT Sessions  Optimizing Your Dojo Application Using The Dojo Build System Moving to Dojo 1.</description>
    </item>
    
    <item>
      <title>Debugging Optimised Dojo Applications</title>
      <link>https://jamesthom.as/2012/04/debugging-optimised-dojo-applications/</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/04/debugging-optimised-dojo-applications/</guid>
      <description>What happens when you&amp;rsquo;ve got an error occurring only in the minified version of your Dojo application?
No matter how fantastic your debugging tool, there&amp;rsquo;s not much it can do with an optimised JavaScript source file with all the code on a single line. Usually, you resort to the frustrating experience of &amp;ldquo;black boxing&amp;rdquo; the issue, interrogating objects in the console and trying to reverse engineer the meaning of their renamed variables.</description>
    </item>
    
    <item>
      <title>Creating Todo MVC in Dojo - Part 2: Views</title>
      <link>https://jamesthom.as/2012/04/creating-todo-mvc-in-dojo-part-2-views/</link>
      <pubDate>Fri, 13 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/04/creating-todo-mvc-in-dojo-part-2-views/</guid>
      <description>In the previous article, we looked at defining our application Model using the Dojo MVC package. The model contained a list of todo tasks, each with a description and finished state, along with composite values representing the total completed and remaining task counts.
Dojo&amp;rsquo;s MVC package provides a series of widgets (Group, Output, Repeat, Generate) that assist the rendering of model attributes in our View, which automatically update when model values change.</description>
    </item>
    
    <item>
      <title>Creating Todo MVC in Dojo - Part 1: Models</title>
      <link>https://jamesthom.as/2012/02/creating-todo-mvc-in-dojo-part-1-models/</link>
      <pubDate>Sun, 26 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/02/creating-todo-mvc-in-dojo-part-1-models/</guid>
      <description>In this first article, we going to look at using DojoX MVC to define our application Models, showing the use of the new StatefulModel class. Later in the series, we&amp;rsquo;ll look at binding our defined Model to a View template, rendering the HTML output and hooking into user events.
Introducing StatefulModels DojoX MVC uses a specific class for representing Models in the MVC pattern, StatefulModel. By using or extending this class, applications have access to a native JavaScript data model that integrates with all the classes under the MVC package.</description>
    </item>
    
    <item>
      <title>Creating Todo MVC in Dojo - Overview</title>
      <link>https://jamesthom.as/2012/01/creating-todo-mvc-in-dojo-overview/</link>
      <pubDate>Sat, 28 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2012/01/creating-todo-mvc-in-dojo-overview/</guid>
      <description>Before Christmas, Addy Osmani sent out the following tweet asking for a Dojo-version of the TodoMVC application.
Reviewing their Github page, the project aims to allow developers to compare MVC frameworks by providing implementations of a sample Todo application using different toolkit&amp;rsquo;s MVC support. They currently have over a dozen entries for toolkits, including Backbone, JavascriptMVC and Spine with more coming soon but, unfortunately, no entry for The Dojo Toolkit.</description>
    </item>
    
    <item>
      <title>Moving to Dojo 1.7 and the path to 2.0</title>
      <link>https://jamesthom.as/2011/12/moving-to-dojo-1.7-and-the-path-to-2.0/</link>
      <pubDate>Sun, 18 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2011/12/moving-to-dojo-1.7-and-the-path-to-2.0/</guid>
      <description>Dojo 1.7 was released this month, giving users early access to lots of features that are going to be standard in Dojo 2.0, due late 2012. We&amp;rsquo;ve already been using early releases of Dojo 1.7 since the summer in my day-to-day role with IBM working on Watson, as we wanted to take advantage of the new module format, better mobile support and much more. With 1.7 now available, I wanted to share my experiences using it on a real project, showing developers what new features are available, how they can use them and what advantages this brings.</description>
    </item>
    
    <item>
      <title>DojoConf 2011 - Building Dojo In The Cloud</title>
      <link>https://jamesthom.as/2011/10/dojoconf-2011-building-dojo-in-the-cloud/</link>
      <pubDate>Sat, 22 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2011/10/dojoconf-2011-building-dojo-in-the-cloud/</guid>
      <description>September saw this year&amp;rsquo;s Dojo Conference hit Washington, D.C for two days. Attending as one of this year&amp;rsquo;s speakers, I was given the second slot on Saturday morning to talk about the Dojo Web Builder. The presentation covered why we built the tool, what it can do (including a live demo), a high-level overview of the architecture and finished looking at how users have been using the tool since it launched in April.</description>
    </item>
    
  </channel>
</rss>
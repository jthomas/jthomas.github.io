<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bluemix on notes on software.</title>
    <link>https://jamesthom.as/tags/bluemix/</link>
    <description>Recent content in bluemix on notes on software.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jamesthom.as/tags/bluemix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cognitive Bots With IBM Watson</title>
      <link>https://jamesthom.as/2016/05/cognitive-bots-with-ibm-watson/</link>
      <pubDate>Tue, 10 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/05/cognitive-bots-with-ibm-watson/</guid>
      <description>Later this month, I&amp;rsquo;m speaking at Twilio&amp;rsquo;s conference about building cognitive bots with IBM Watson. Preparing for this presentation, I&amp;rsquo;ve been experimenting with the IBM Watson services to build sample bots that can understand, and act on, natural language.
IBM&amp;rsquo;s artificial intelligence system, [Watson](https://en.wikipedia.org/wiki/Watson_(computer), now provides a series of &amp;ldquo;cognitive&amp;rdquo; services available through IBM&amp;rsquo;s Bluemix cloud platform. Developers can integrate everything from natural language processing, image and speech recognition, emotion analysis and more into their applications using RESTful APIs.</description>
    </item>
    
    <item>
      <title>Serverless APIs with OpenWhisk and API Connect</title>
      <link>https://jamesthom.as/2016/04/serverless-apis-with-openwhisk-and-api-connect/</link>
      <pubDate>Tue, 26 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/04/serverless-apis-with-openwhisk-and-api-connect/</guid>
      <description>&amp;ldquo;Serverless&amp;rdquo; cloud platforms are a major trend in 2016. Following on from Amazon&amp;rsquo;s Lambda service, released eighteen months ago, this year has seen IBM, Microsoft and Google all launch their own solutions.
These platforms let you build stateless microservices, combining APIs with business logic, without servers. Microservices are executed on-demand, in milliseconds, rather than having to sit idle waiting for incoming requests. Users pay only for the raw computation time used.</description>
    </item>
    
    <item>
      <title>Playing With OpenWhisk</title>
      <link>https://jamesthom.as/2016/04/playing-with-openwhisk/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/04/playing-with-openwhisk/</guid>
      <description>IBM recently launched OpenWhisk, their new &amp;ldquo;serverless&amp;rdquo; compute platform.
This service allows developers to register small bits of code that are executed on-demand in response to external events. The &amp;ldquo;serverless&amp;rdquo; stack started in 2014, when Amazon launched Lambda, but is now set to be a major technology trend in 2016 with IBM, Microsoft and Google all launching their own solutions.
OpenWhisk is the first open-source &amp;ldquo;serverless&amp;rdquo; platform. It supports running registered actions in Node.</description>
    </item>
    
    <item>
      <title>Debugging Live Containers on IBM Bluemix</title>
      <link>https://jamesthom.as/2016/01/debugging-live-containers-on-ibm-bluemix/</link>
      <pubDate>Fri, 22 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/01/debugging-live-containers-on-ibm-bluemix/</guid>
      <description>For the last few months, I&amp;rsquo;ve been using the ELK stack to collect logs from my Cloud Foundry applications. This service has been deployed on IBM Bluemix using a Docker container, previously detailed in this blog post, and running happily until it ran into issues this week.
Trying to load the Kibana web application, the server was returning connection refused errors. Looking at the container in the IBM Bluemix dashboard showed no obvious signs of issues.</description>
    </item>
    
    <item>
      <title>Cloud Foundry Application Monitoring Bot For Slack</title>
      <link>https://jamesthom.as/2016/01/cloud-foundry-application-monitoring-bot-for-slack/</link>
      <pubDate>Tue, 05 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/01/cloud-foundry-application-monitoring-bot-for-slack/</guid>
      <description>Cloud Foundry makes it so easy to build, deploy and manage applications that it can be a struggle just to keep up with development progress&amp;hellip;
 &amp;ldquo;Who is restarting this application?&amp;rdquo; &amp;ldquo;What is this new service instance?&amp;rdquo; &amp;ldquo;When did this application instance run out of memory?&amp;rdquo;
 Development teams are increasingly using Slack to collaborate on projects and using custom bots to manage and monitor applications, triggered through the channel messages.</description>
    </item>
    
    <item>
      <title>Updated IBM Watson Nodes for Node-RED</title>
      <link>https://jamesthom.as/2016/01/updated-ibm-watson-nodes-for-node-red/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2016/01/updated-ibm-watson-nodes-for-node-red/</guid>
      <description>Earlier this year, I made a major upate to the Node-RED nodes for the IBM Watson services available through IBM Bluemix. Since then, the IBM Watson team has been busy, with lots of changes to APIs. I&amp;rsquo;ve recently been working through these changes, updating the nodes, to ensure they work against the latest APIs.
Updates to these nodes have now been finished and are available through the boilerplate on IBM Bluemix or by installing the IBM Bluemix Nodes package locally.</description>
    </item>
    
    <item>
      <title>Node.js v4 in Cloud Foundry</title>
      <link>https://jamesthom.as/2015/09/node.js-v4-in-cloud-foundry/</link>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/09/node.js-v4-in-cloud-foundry/</guid>
      <description>Last week, Node.js released the latest version of their project, v4.0.0. This release, representing the convergence of io.js with the original Node.js project, came with lots of exciting features like improved ES6 support.
Cloud Foundry already supports multiple versions of the Node.js runtime. Developers select the desired runtime version using a parameter in their application&amp;rsquo;s package descriptor.
So, we just update package.json to include &amp;ldquo;4.0.0&amp;rdquo; and re-deploy our application?
Not yet.</description>
    </item>
    
    <item>
      <title>Location-Based Cloud Foundry Applications using Nginx and Docker</title>
      <link>https://jamesthom.as/2015/09/location-based-cloud-foundry-applications-using-nginx-and-docker/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/09/location-based-cloud-foundry-applications-using-nginx-and-docker/</guid>
      <description>Routing application traffic based upon the geographic location of incoming requests can be used for a number of scenarios&amp;hellip;
 Restricting access to your application outside defined geographic regions. Load-balancing traffic to the closest region for improved performance. Providing custom applications for different countries.  IBM Bluemix allows deploying applications to different geographic regions through hosting instances of the Cloud Foundry platform in multiple locations.
Cloud Foundry supports simple HTTP routing rules for deployed applications.</description>
    </item>
    
    <item>
      <title>running one-off tasks in cloud foundry</title>
      <link>https://jamesthom.as/2015/09/running-one-off-tasks-in-cloud-foundry/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/09/running-one-off-tasks-in-cloud-foundry/</guid>
      <description>Whether making changes to a database schema, bulk importing data to initialise a database or setting up a connected service, there are often administrative tasks that needed to be carried out for an application to run correctly.
These tasks usually need finishing before starting the application and should not be executed more than once.
Previously, the CF CLI provided commands, tunnel and console, to help running one-off tasks manually. These commands were deprecated with the upgrade from v5 to v6 to discourage snowflake environments.</description>
    </item>
    
    <item>
      <title>GeoPix Live Photos</title>
      <link>https://jamesthom.as/2015/07/geopix-live-photos/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/07/geopix-live-photos/</guid>
      <description>Andrew Trice wrote a great sample application for IBM Bluemix called GeoPix.
 GeoPix uses the IBM MobileFirst services to provide a native iOS application which allows users to capture images from their mobile phones, storing them on the local device with automatic syncing to the cloud when online. Using a web application, the user can view their images over a map based upon their location when the photo was taken.</description>
    </item>
    
    <item>
      <title>AlchemyAPI &amp;amp; Updated Watson Nodes for Node-RED</title>
      <link>https://jamesthom.as/2015/07/alchemyapi-amp-updated-watson-nodes-for-node-red/</link>
      <pubDate>Wed, 15 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/07/alchemyapi-amp-updated-watson-nodes-for-node-red/</guid>
      <description>I&amp;rsquo;ve recently been working on a number of updates to the Node-RED nodes for the IBM Bluemix platform&amp;hellip;
Highlights below:
New AlchemyAPI Nodes There are two new nodes (Feature Extract and Image Extract) in the package, allowing users to call services from the AlchemyAPI platform.
  Feature Extract. This node will analyse external URLs, HTML or text content with features for text-based analysis from the AlchemyAPI service, e.g. keywords, sentiment, relationships, etc.</description>
    </item>
    
    <item>
      <title>Debugging Cloud Foundry Stack Issues</title>
      <link>https://jamesthom.as/2015/07/debugging-cloud-foundry-stack-issues/</link>
      <pubDate>Fri, 10 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/07/debugging-cloud-foundry-stack-issues/</guid>
      <description>Recent changes to the Cloud Foundry stacks supported by IBM Bluemix have led to a number of issues for users. I&amp;rsquo;ve helped users diagnose and fix issues that have occurred due to a mistmatches between the platform stack, applications and the buildpack. Learning a number of techniques for helping to discover and resolve these issues and I wanted to share them with everyone else.
Running on Cloud Foundry&amp;rsquo;s Platform-as-a-Service solution, we take for granted that low-level concepts like operating systems are abstracted away from the developer.</description>
    </item>
    
    <item>
      <title>Making Logs Awesome - Elasticsearch in the Cloud using Docker</title>
      <link>https://jamesthom.as/2015/07/making-logs-awesome-elasticsearch-in-the-cloud-using-docker/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/07/making-logs-awesome-elasticsearch-in-the-cloud-using-docker/</guid>
      <description>Logs are boring. It used to be the only time you&amp;rsquo;d be looking at your application logs was when something went wrong.
Logs filled up disk space until they rotated out of existence.
&amp;hellip;but now businesses are increasingly focused on using data to drive decisions.
Which advert leads to the highest click-through rates?
How did that last website change affect user retention?
What customer devices should our website support?
Guess where the answers lie?</description>
    </item>
    
    <item>
      <title>Continuous Delivery for Phonebot</title>
      <link>https://jamesthom.as/2015/06/continuous-delivery-for-phonebot/</link>
      <pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/06/continuous-delivery-for-phonebot/</guid>
      <description>Since creating Phonebot last month, I&amp;rsquo;ve been working on setting up a fully-automated build and deploy for the project. Using IBM DevOps Services, Phonebot now has &amp;ldquo;Continuous Delivery&amp;rdquo; enabled.
When new code is commited to the external Github repository, the build service will perform the following tasks.
 Run Unit Tests and Code Lint Tools Deploy To Test Server Run Integration Tests Against Test Server Deploy To Production  Each stage will only be executed if the following stage passes.</description>
    </item>
    
    <item>
      <title>IBM Watson Nodes For Node-RED</title>
      <link>https://jamesthom.as/2015/04/ibm-watson-nodes-for-node-red/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/04/ibm-watson-nodes-for-node-red/</guid>
      <description>I&amp;rsquo;ve updated the IBM Watson Nodes for Node-RED to include seven extra services.
Previously, the package only provided support for the following services:
 Language Identification. Machine Translation. Question &amp;amp; Answers.  With the recent code changes, users now have access to the additional services:
 Message Resonance. Personality Insights. Relationship Extraction. Speech to Text. Text to Speech. Tradeoff Analytics. Visual Recognition.  Using Node-RED through the IBM Bluemix boilerplate will automatically include the IBM Watson modules in the palette.</description>
    </item>
    
    <item>
      <title>Creating CF CLI Plugins</title>
      <link>https://jamesthom.as/2015/04/creating-cf-cli-plugins/</link>
      <pubDate>Thu, 16 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/04/creating-cf-cli-plugins/</guid>
      <description>Since the v.6.7 release of the Cloud Foundry Command Line Interface (CF CLI), users have been to create and install plugins to provide custom commands.
There&amp;rsquo;s now a whole community of third-party plugins to help make you more productive developing Cloud Foundry applications.
Installing Plugins Plugins can be installed directly from the platform binary.
$ go get github.com/sample_user/sample_plugin $ cf install-plugin $GOPATH/bin/sample_plugin &amp;hellip;or discovered and installed directly from plugin repositories.</description>
    </item>
    
    <item>
      <title>Cloud Foundry Custom Buildpacks</title>
      <link>https://jamesthom.as/2015/03/cloud-foundry-custom-buildpacks/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/03/cloud-foundry-custom-buildpacks/</guid>
      <description>Cloud Foundry Buildpacks provide runtime and framework support for applications. Users can rely on the built-in selection for Java, NodeJS, Python, etc. or additional community buildpacks from Github.
Buildpacks are open-source, making them simple to customise and include libraries needed by your application.
Doctor Watson uses an NPM module that relies on a command-line application, SOX, being installed in the runtime environment.
Making this command-line application available on the platform required the project to create a custom NodeJS buildpack.</description>
    </item>
    
    <item>
      <title>Doctor Watson</title>
      <link>https://jamesthom.as/2015/02/doctor-watson/</link>
      <pubDate>Fri, 27 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2015/02/doctor-watson/</guid>
      <description>Doctor Watson is an IBM Bluemix application to answer medical questions over the phone, using IBM Watson and Twilio.
Ringing an external phone number, the application will answer and ask for a medical question to help with. Translating your speech into text and using IBM Watson&amp;rsquo;s Question and Answer service, Doctor Watson will query the medical corpus.
Top rated answers will be converted to speech and used as a response over the phone.</description>
    </item>
    
    <item>
      <title>Zero Downtime Deployments Using IBM Bluemix</title>
      <link>https://jamesthom.as/2014/07/zero-downtime-deployments-using-ibm-bluemix/</link>
      <pubDate>Tue, 22 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jamesthom.as/2014/07/zero-downtime-deployments-using-ibm-bluemix/</guid>
      <description>Here&amp;rsquo;s a video I&amp;rsquo;ve made showing you how to deploy new versions of an application on IBM Bluemix without the end-user having to suffer any down time:
Utilising the Blue Green deployment pattern, we deploy the new version to a separate host within the production environment, rather than taking down and updating the existing application. The HTTP router in front of the applications controls tunnelling application requests between the different versions.</description>
    </item>
    
  </channel>
</rss>